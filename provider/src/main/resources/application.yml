server:
  port: 8088

dubbo:
  #  config:
  #    # 指示是否从外部配置绑定多个属性
  #    multiple: true
  # 一、应用信息配置。
  # 对应的配置类：org.apache.dubbo.config.ApplicationConfig
  application:
    id: user-demo
    # 当前应用名称，用于注册中心计算应用间依赖关系。(必填)
    # 注意：消费者和提供者应用名不要一样，此参数不是匹配条件，你当前项目叫什么名字就填什么，和提供者消费者角色无关
    name: user-provider
    # 版本号
    version: 1.0.0
#    # 应用负责人
#    owner: Bubble
#    # 组织名（部门）
#    organization: Search-BU
#    # 用于服务分层对应的架构。如，intl、china。不同的架构使用不同的分层。
#    architecture: china
#    # 应用环境，如：develop/test/product，不同环境使用不同的缺省值，以及作为只用于开发测试功能的限制条件
#    environment: develop
#    # Java字节码编译器，用于动态类的生成，可选：jdk或javassist
#    compiler: jdk
#    # 日志输出方式，可选：slf4j,jcl,log4j,log4j2,jdk
#    logger: log4j2

  # 配置元数据中心
  metadata-report:
    address: zookeeper://127.0.0.1:2181
  # 二、注册中心配置。
  # 对应的配置类： org.apache.dubbo.config.RegistryConfig。
  # 同时如果有多个不同的注册中心，可以声明多个<dubbo:registry>标签，并在<dubbo:service>或<dubbo:reference>的registry属性指定使用的注册中心。
  registry:
#   # 注册中心引用BeanId，多注册中心时，可以在<dubbo:service registry="">或<dubbo:reference registry="">中引用此ID
    id: chinaRegistry
    # 注册中心服务器地址，如果地址没有端口缺省为9090。（必填）
    # 同一集群内的多个地址用逗号分隔，如：ip:port,ip:port，不同集群的注册中心，请配置多个<dubbo:registry>标签
    address: zookeeper://127.0.0.1:2181
    # 注册中心地址协议，支持dubbo, multicast, zookeeper, redis, consul(2.7.1), sofa(2.7.2), etcd(2.7.2), nacos(2.7.2)等协议
#    protocol: dubbo
    # 注册中心缺省端口，当address没有带端口时使用此端口做为缺省值
#    port: 9090
    # 登录注册中心用户名，如果注册中心不需要验证可不填
#    username: root
#    # 登录注册中心密码，如果注册中心不需要验证可不填
#    password: root
#    # 网络传输方式，可选mina,netty
##    transporter: netty
#    # 注册中心请求超时时间(毫秒)
#    timeout: 5000
#    # 注册中心会话超时时间(毫秒)，
#    # 用于检测提供者非正常断线后的脏数据，比如用心跳检测的实现，此时间就是心跳间隔，不同注册中心实现不一样。
#    session: 60000
#    # 使用文件缓存注册中心地址列表及服务提供者列表，应用重启时将基于此文件恢复，注意：两个注册中心不能使用同一文件存储
#    #    file:
#    # 注册中心不存在时，是否报错
#    check: true
#    # 是否向此注册中心注册服务，如果设为false，将只订阅，不注册
#    register: true
#    # 是否向此注册中心订阅服务，如果设为false，将只注册，不订阅
#    subscribe: true
#    # 服务是否动态注册，如果设为false，注册后将显示为disable状态，需人工启用，并且服务提供者停止时，也不会自动取消注册，需人工禁用。
#    dynamic: true
#    # 服务注册分组，跨组的服务不会相互影响，也无法相互调用，适用于环境隔离。
#    group: user-group
#    # 注册到注册中心的URL是否采用精简模式的（与低版本兼容）
#    simplified: true
#    # 在simplified=true时，extraKeys允许你在默认参数外将额外的key放到URL中，格式："interface,key1,key2"。
#    extra-keys: true

  # 三、服务提供者协议配置。
  # 对应的配置类：org.apache.dubbo.config.ProtocolConfig。同时，如果需要支持多协议，可以声明多个 <dubbo:protocol> 标签，并在 <dubbo:service> 中通过 protocol 属性指定使用的协议。
  protocol:
    # 协议BeanId，可以在<dubbo:service protocol="">中引用此ID，如果ID不填，缺省和name属性值一样，重复则在name后加序号。
    id: dubbo-protocol
    # 协议名称 （必填）
    name: dubbo
    # 服务暴露端口
    # dubbo协议缺省端口为20880，rmi协议缺省端口为1099，http和hessian协议缺省端口为80；
    # 如果没有配置port，则自动采用默认端口，如果配置为-1，则会分配一个没有被占用的端口。
    # Dubbo 2.4.0+，分配的端口在协议缺省端口的基础上增长，确保端口段可控。
    port: 20080
    # 自动查找本机IP：
    # 服务主机名，多网卡选择或指定VIP及域名时使用，为空则自动查找本机IP，
    # 建议不要配置，让Dubbo自动获取本机IP
    #    host:
    # 线程池类型，可选：fixed/cached
#    threadpool: fixed
#    # 服务线程池大小(固定大小)
#    threads: 200
#    # io线程池大小(固定大小)：cpu个数+1
#    #    iothreads:
#    # 服务提供方最大可接受连接数，默认0
#    accepts: 0
#    # 请求及响应数据包大小限制，单位：字节，默认8388608(=8M)
#    payload: 8388608
#    # 协议编码方式
##    codec: dubbo
#    # 协议序列化方式，当协议支持多种序列化方式时使用，默认使用hessian2
#    # 比如：dubbo协议的dubbo,hessian2,java,compactedjava，以及http协议的json等
#    serialization: hessian2
#    # 设为true，将向logger中输出访问日志，也可填写访问日志文件路径，直接把访问日志输出到指定文件
#    accesslog: true
#    # 提供者上下文路径，为服务path的前缀
#    #    contextpath:
#    # 协议的服务端和客户端实现类型，比如：dubbo协议的mina,netty等，可以分拆为server和client配置
#    transporter: netty
#    # 协议的服务器端实现类型，比如：dubbo协议的mina,netty等，http协议的jetty,servlet等
#    server: netty
#    # 协议的客户端实现类型，比如：dubbo协议的mina,netty等
#    client: netty
#    # 协议的消息派发方式，用于指定线程模型，比如：dubbo协议的all, direct, message, execution, connection等
#    dispatcher: all
#    # 线程池队列大小，当线程池满时，排队等待执行的队列大小，
#    # 建议不要设置，当线程池满时应立即失败，重试其它服务提供机器，而不是排队，除非有特殊需求。
#    #    queues: 0
#    # 序列化编码
#    charset: UTF-8
#    # 网络读写缓冲区大小
#    buffer: 8192
#    # 心跳间隔，对于长连接，当物理层断开时，比如拔网线，TCP的FIN消息来不及发送，对方收不到断开事件，此时需要心跳来帮助检查连接是否已断开
#    #    heartbeat: 0
#    # 所支持的telnet命令，多个命令用逗号分隔
#    #    telnet:
#    # 该协议的服务是否注册到注册中心
#    register: true

  # 四、监控中心配置。
  # 对应的配置类： org.apache.dubbo.config.MonitorConfig
  monitor:
    # 监控中心协议，如果为protocol="registry"，表示从注册中心发现监控中心地址，否则直连监控中心。
    protocol: registry
    # 直连监控中心服务器地址，address="10.20.130.230:12080"
    address: 127.0.0.1:8888
  #    address: 127.0.0.1:12080
  scan:
    # 扫描服务注册bean，即service实现类所在的包
    basePackages: com.bubble.provider.service.impl

